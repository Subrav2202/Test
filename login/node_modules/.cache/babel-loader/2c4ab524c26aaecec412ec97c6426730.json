{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactlearning\\\\Login Model\\\\Frontend\\\\login\\\\src\\\\Components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Studymaterial from \"./Studymaterial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [isloggedin, setisloggedin] = useState(true);\n  const [hour, setHour] = useState();\n  const [minute, setMinute] = useState();\n  const [seconds, setSeconds] = useState();\n  console.log(sessionStorage.getItem(\"time\"));\n  let [c, setc] = useState(sessionStorage.getItem(\"time\") == null ? 3610 : sessionStorage.getItem(\"time\")); //Initially set to 1 hour\n\n  sessionStorage.clear();\n  useEffect(() => {\n    window.onbeforeunload = function () {\n      sessionStorage.setItem(\"time\", \"c\");\n      setisloggedin(false);\n    };\n  }, [c]);\n\n  const clickHandler = () => {\n    setShow(!show);\n    let myTimer = setInterval(myClock, 1000);\n\n    function myClock() {\n      --c;\n      var seconds = c % 60;\n      setSeconds(seconds); // Seconds that cannot be written in minutes\n\n      var secondsInMinutes = (c - seconds) / 60;\n      var minutes = secondsInMinutes % 60; // Gives the seconds that COULD be given in minutes\n\n      setMinute(minutes); // Minutes that cannot be written in hours\n\n      setHour((secondsInMinutes - minutes) / 60); // Now in hours, minutes and seconds, you have the time you need.\n\n      if (c == 0) {\n        clearInterval(myTimer);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid gray\"\n    },\n    className: \"m-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between m-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        size: \"lg\",\n        onClick: () => clickHandler(),\n        children: \"Study Material 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        size: \"lg\",\n        disabled: true,\n        children: [\"Time Remaining \", hour + \":\" + minute + \":\" + seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(Studymaterial, {\n      close: () => setShow(!show)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-end m-2\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        size: \"lg\",\n        disabled: true,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"xRpfYwQpmJWh+y2GGiyYH1onjh8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/reactlearning/Login Model/Frontend/login/src/Components/Dashboard.js"],"names":["React","useState","useEffect","Button","Studymaterial","Dashboard","show","setShow","isloggedin","setisloggedin","hour","setHour","minute","setMinute","seconds","setSeconds","console","log","sessionStorage","getItem","c","setc","clear","window","onbeforeunload","setItem","clickHandler","myTimer","setInterval","myClock","secondsInMinutes","minutes","clearInterval","border"],"mappings":"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","sourcesContent":["import React, { useState,useEffect} from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Studymaterial from \"./Studymaterial\";\r\n\r\nfunction Dashboard() {\r\n  const [show, setShow] = useState(false);\r\n  const [isloggedin, setisloggedin] = useState(true)\r\n  const [hour,setHour]=useState()\r\n  const [minute,setMinute]=useState()\r\n  const [seconds,setSeconds]=useState()\r\n  console.log(sessionStorage.getItem(\"time\"))\r\n  let [c,setc]=useState(sessionStorage.getItem(\"time\")==null? 3610:sessionStorage.getItem(\"time\"))//Initially set to 1 hour\r\n  sessionStorage.clear()\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = function(){\r\n      sessionStorage.setItem(\"time\", \"c\");\r\n      setisloggedin(false)\r\n   }   \r\n  }, [c])\r\n\r\n  const clickHandler = () => {\r\n\r\n    setShow(!show);\r\n\r\n    let myTimer = setInterval(myClock, 1000);\r\n    function myClock() {\r\n      --c\r\n      var seconds = c % 60;\r\n      setSeconds(seconds); // Seconds that cannot be written in minutes\r\n      var secondsInMinutes = (c - seconds) / 60;\r\n      var minutes = secondsInMinutes % 60; // Gives the seconds that COULD be given in minutes\r\n      setMinute(minutes); // Minutes that cannot be written in hours\r\n      setHour((secondsInMinutes - minutes) / 60);\r\n      // Now in hours, minutes and seconds, you have the time you need.\r\n      if (c == 0) {\r\n          clearInterval(myTimer);\r\n      }\r\n  }\r\n\r\n  };\r\n  return (\r\n    <div style={{ border: \"1px solid gray\"}} className=\"m-3\">\r\n      <div className=\"d-flex justify-content-between m-2\">\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          size=\"lg\"\r\n          onClick={() => clickHandler()}\r\n        >\r\n          Study Material 1\r\n        </Button>\r\n        <Button variant=\"outline-success\" size=\"lg\" disabled>\r\n          Time Remaining {hour + \":\" + minute + \":\" + seconds}\r\n        </Button>\r\n      </div>\r\n      {show && <Studymaterial close={() => setShow(!show)} />}\r\n      <div className=\"d-flex justify-content-end m-2\">\r\n        <Button variant=\"outline-success\" size=\"lg\" disabled>\r\n          Finish\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}